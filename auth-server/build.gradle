plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.0")
    set('jsonwebtokenVersion', "0.12.5")
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    // region spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.security:spring-security-core:6.2.3'
    implementation 'org.springframework.security:spring-security-crypto:6.2.3'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    // endregion spring

    // region kafka
    implementation 'org.springframework.kafka:spring-kafka:3.1.2'
    // endregion kafka

    // region lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // endregion lombok

    // region postgres
    runtimeOnly 'org.postgresql:postgresql'
    // endregion postgres

    // region flyway
    implementation 'org.flywaydb:flyway-core'
    // endregion flyway

    // region jsonwebtoken
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jsonwebtokenVersion}"
    implementation "io.jsonwebtoken:jjwt-api:${jsonwebtokenVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jsonwebtokenVersion}"
    // endregion jsonwebtoken

    // region mapstruct
    implementation "org.mapstruct:mapstruct:1.5.4.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.4.Final"
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.1.0'
    // endregion mapstruct

    // region test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // endregion test
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
